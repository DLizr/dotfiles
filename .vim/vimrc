syntax on
set nocompatible
set showmatch
set incsearch
set hlsearch
set path=**
set lazyredraw
set showcmd

set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

set number
set relativenumber

filetype plugin indent on
set autoindent

set cino=j1

call plug#begin()
Plug 'SirVer/ultisnips'
call plug#end()

" set Vim-specific sequences for RGB colors
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

if (empty($TMUX))
    if (has("termguicolors"))
        set termguicolors
    endif
endif
if (!has("nvim"))
    colorscheme onedark
endif

inoremap {<CR> {<CR>}<ESC>O
inoremap {;<CR> {<CR>};<ESC>O

nnoremap <silent> <C-c> :noh<CR><ESC>

command CP :r ~/.vim/snippets/competitive.cpp
set langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ,фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz
let g:markdown_fenced_languages = ['vim', 'python', 'cpp', 'c', 'bash']
let g:markdown_folding = 1

let extension = expand("%:e")
if (extension == "cpp" || extension == "h")
    noremap <F5> :!Compile %<CR>
    noremap <F6> :!CompileDebug %<CR>
elseif (extension == "rs")
    noremap <F5> :!rustc % -o out<CR>
elseif (extension == "tex")
    noremap <F5> :!pdflatex %<CR>
    let g:UltiSnipsExpandTrigger = '<tab>'
    let g:UltiSnipsJumpForwardTrigger = '<tab>'
    let g:UltiSnipsJumpBackwardTrigger = '<s-tab>'
    let g:UltiSnipsSnippetDirectories=["ulti-snippets"]
endif
